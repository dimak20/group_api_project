services:
  library_service:
    build:
      context: .
    env_file:
      - .env
    ports:
      - "8000:8000"
    command: >
      sh -c "python manage.py wait_for_db &&
            python manage.py makemigrations &&
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./:/app
      - my_media:/files/media
    depends_on:
      - db
      - redis
    networks:
      - library

  bot:
    build: .
    restart: on-failure
    command: >
      python manage.py run_bot
    env_file:
      - .env
    depends_on:
      - db


  db:
    image: postgres:16.0-alpine3.17
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - my_db:$PGDATA
    networks:
      - library

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "3333:80"
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - movie_db_pgadmin_data:/var/lib/pgadmin
    networks:
      - library

  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - library
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 60s
      retries: 5
    restart: always

  celery:
    build:
      context: .
    env_file:
      - .env
    command: >
      sh -c "celery -A group_library_project worker --loglevel=info"
    depends_on:
      - db
      - redis
    networks:
      - library

  celery-beat:
    build:
      context: .
    user: my_user
    command: "celery -A group_library_project beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
    restart: on-failure
    networks:
      - library

  flower:
    build:
      context: .
    ports:
      - "5555:5555"
    command: "celery -A group_library_project flower --address=0.0.0.0"
    depends_on:
      - celery
      - celery-beat
    env_file:
      - .env
    networks:
      - library


volumes:
  my_db:
  my_media:
  movie_db_pgadmin_data:

networks:
  library:
    driver: bridge
